{"version":3,"sources":["store/types.ts","store/actions/alertActions.ts","components/ui/Search.tsx","store/actions/weatherActions.ts","components/ui/Alert.tsx","components/Weather.tsx","App.tsx","store/reducers/weatherReducer.ts","store/reducers/alertReducer.ts","store/index.ts","index.tsx"],"names":["GET_WEATHER","SET_LOADING","SET_ERROR","SET_ALERT","setAlert","message","type","payload","Search","title","dispatch","useDispatch","useState","city","setCity","submitHandler","e","preventDefault","trim","a","fetch","process","res","ok","json","resData","Error","getWeather","className","onSubmit","placeholder","style","maxWidth","value","onChange","currentTarget","changeHandler","margin","Alert","onClose","onClick","justifyContent","Weather","data","fahrenheit","main","temp","toFixed","celsius","marginBottom","name","sys","country","alignItems","weather","description","src","icon","alt","humidity","pressure","wind","speed","App","weatherData","useSelector","state","loading","error","alertMsg","alert","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcd7aaf7.chunk.js","sourcesContent":["export const GET_WEATHER = 'GET_WEATHER'\r\nexport const SET_LOADING = 'SET_LOADING'\r\nexport const SET_ERROR = 'SET_ERROR'\r\nexport const SET_ALERT = 'SET_ALERT'\r\n\r\nexport interface Weather {\r\n    description: string\r\n    icon: string\r\n    id: number\r\n    main: string\r\n}\r\n\r\nexport interface WeatherData {\r\n    base: string\r\n    clouds: {\r\n        all: number\r\n    }\r\n    cod: number\r\n    coord: {\r\n        lon: number\r\n        lat: number\r\n    }\r\n    dt: number\r\n    id: number\r\n    main : {\r\n        feels_like: number\r\n        humidity: number\r\n        pressure: number\r\n        temp: number\r\n        temp_max: number\r\n        temp_min: number\r\n    }\r\n    name: string\r\n    sys: {\r\n        country: string\r\n        id: number\r\n        sunrise: number\r\n        sunset: number\r\n        type: number\r\n    }\r\n    timezone: number\r\n    visibility: number\r\n    weather: Weather[]\r\n    wind: {\r\n        speed: number\r\n        deg: number\r\n    }\r\n}\r\n\r\nexport interface WeatherError {\r\n    cod: string\r\n    message: string\r\n}\r\n\r\nexport interface WeatherState {\r\n    data: WeatherData | null\r\n    loading: boolean\r\n    error: string \r\n}\r\n\r\ninterface GetWeatherAction {\r\n    type: typeof GET_WEATHER\r\n    payload: WeatherData\r\n}\r\n\r\ninterface SetLoadingAction {\r\n    type: typeof SET_LOADING\r\n}\r\n\r\ninterface SetErrorAction {\r\n    type: typeof SET_ERROR\r\n    payload: string\r\n    \r\n}\r\n\r\nexport type WeatherAction = GetWeatherAction | SetLoadingAction | SetErrorAction\r\n\r\nexport interface AlertAction {\r\n    type: typeof SET_ALERT\r\n    payload: string\r\n}\r\n\r\nexport interface AlertState {\r\n    message: string\r\n}","import { SET_ALERT, AlertAction } from '../types'\r\n\r\nexport const setAlert = (message: string): AlertAction => {\r\n  return {\r\n    type: SET_ALERT,\r\n    payload: message,\r\n  }\r\n}\r\n","import React, { FC, FormEvent, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { setAlert } from '../../store/actions/alertActions'\r\nimport { getWeather, setLoading } from '../../store/actions/weatherActions'\r\n\r\ninterface SerachProps {\r\n  title: string\r\n}\r\n\r\nexport const Search: FC<SerachProps> = ({ title }) => {\r\n  const dispatch = useDispatch()\r\n  const [city, setCity] = useState('')\r\n\r\n  const changeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n    setCity(e.currentTarget.value)\r\n  }\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    if (city.trim() === '') {\r\n      return dispatch(setAlert('City is required!'))\r\n    }\r\n\r\n    dispatch(setLoading())\r\n    dispatch(getWeather(city))\r\n    setCity('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"hero is-light has-text-centered\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">{title}</h1>\r\n          <form className=\"py-5\" onSubmit={(e) => submitHandler(e)}>\r\n            <input\r\n              placeholder=\"Enter city name\"\r\n              style={{ maxWidth: 300 }}\r\n              className=\"input has-text-centered mb-2\"\r\n              type=\"text\"\r\n              value={city}\r\n              onChange={(e) => changeHandler(e)}\r\n            />\r\n            <button\r\n              className=\"button is-primary is-fullwidth\"\r\n              style={{ maxWidth: 300, margin: '0 auto' }}>\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { RootState } from '..'\r\nimport {\r\n  WeatherAction,\r\n  WeatherData,\r\n  WeatherError,\r\n  GET_WEATHER,\r\n  SET_LOADING,\r\n  SET_ERROR,\r\n} from '../types'\r\n\r\nconst api_key = process.env.REACT_APP_API_KEY\r\n\r\nexport const getWeather = (city: string): ThunkAction<void, RootState, null, WeatherAction> => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api_key}`,\r\n      )\r\n\r\n      if (!res.ok) {\r\n        const resData: WeatherError = await res.json()\r\n        throw new Error(resData.message)\r\n      }\r\n\r\n      const resData: WeatherData = await res.json()\r\n      dispatch({\r\n        type: GET_WEATHER,\r\n        payload: resData,\r\n      })\r\n    } catch (err: any) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: err.message,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const setLoading = (): WeatherAction => {\r\n  return {\r\n    type: SET_LOADING,\r\n  }\r\n}\r\n\r\nexport const setError = (): WeatherAction => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: '',\r\n  }\r\n}\r\n","import React, { FC } from 'react'\r\n\r\ninterface AlertProps {\r\n  message: string\r\n  onClose: () => void\r\n}\r\n\r\nexport const Alert: FC<AlertProps> = ({ message, onClose }) => {\r\n  return (\r\n    <div className=\"modal is-active has text centered\">\r\n      <div className=\"modal-background\" onClick={onClose}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head has-background-danger\">\r\n          <p className=\"modal-card-title has-text-white\">{message}</p>\r\n        </header>\r\n        <footer className=\"modal-card-foot\" style={{ justifyContent: 'center' }}>\r\n          <button className=\"button\" onClick={onClose}>\r\n            Close\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { FC } from 'react'\r\nimport { WeatherData } from '../store/types'\r\n\r\ninterface WeatherProps {\r\n  data: WeatherData\r\n}\r\n\r\nexport const Weather: FC<WeatherProps> = ({ data }) => {\r\n  const fahrenheit = (data.main.temp * 1.8 - 459.67).toFixed(2)\r\n  const celsius = (data.main.temp - 273.15).toFixed(2)\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title has-text-centered\" style={{ marginBottom: 50 }}>\r\n          {data.name} - {data.sys.country}\r\n        </h1>\r\n        <div className=\"level\" style={{ alignItems: 'flex-start' }}>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">{data.weather[0].description}</p>\r\n              <p className=\"title\">\r\n                <img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`} alt=\"\" />\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">temp</p>\r\n              <div className=\"title\">\r\n                <p className=\"mb-2\">{data.main.temp}K</p>\r\n                <p className=\"mb-2\">\r\n                  {fahrenheit}\r\n                  <sup>&#8457;</sup>\r\n                </p>\r\n                <p>\r\n                  {celsius}\r\n                  <sup>&#8451;</sup>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">humidity</p>\r\n              <p className=\"title\">{data.main.humidity}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">pressure</p>\r\n              <p className=\"title\">{data.main.pressure}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">wind</p>\r\n              <p className=\"title\">{data.wind.speed} m/s</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React, { FC } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { RootState } from './store'\nimport { Search } from './components/ui/Search'\nimport { Alert } from './components/ui/Alert'\nimport { Weather } from './components/Weather'\nimport { setAlert } from './store/actions/alertActions'\nimport { setError } from './store/actions/weatherActions'\n\nconst App: FC = () => {\n  const dispatch = useDispatch()\n  const weatherData = useSelector((state: RootState) => state.weather.data)\n  const loading = useSelector((state: RootState) => state.weather.loading)\n  const error = useSelector((state: RootState) => state.weather.error)\n  const alertMsg = useSelector((state: RootState) => state.alert.message)\n\n  return (\n    <div className=\"has-text-centered\">\n      <Search title=\"Enter city name and press search button\" />\n      {loading ? (\n        <h2 className=\"is-size-3 py-2\">Loading...</h2>\n      ) : (\n        weatherData && <Weather data={weatherData} />\n      )}\n\n      {alertMsg && <Alert message={alertMsg} onClose={() => dispatch(setAlert(''))} />}\n      {error && <Alert message={error} onClose={() => dispatch(setError())} />}\n    </div>\n  )\n}\n\nexport default App\n","import { WeatherState, WeatherAction, GET_WEATHER, SET_LOADING, SET_ERROR } from './../types'\r\n\r\nconst initialState: WeatherState = {\r\n    data: null,\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nexport const weatherReducer = (state = initialState, action: WeatherAction): WeatherState => {\r\n    switch (action.type) {\r\n        case GET_WEATHER:\r\n            return {\r\n                data: action.payload,\r\n                loading: false,\r\n                error: ''\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }    \r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false             \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { AlertState, AlertAction, SET_ALERT } from './../types'\r\n\r\nconst initialState: AlertState = {\r\n  message: '',\r\n}\r\n\r\nexport const alertReducer = (state = initialState, action: AlertAction): AlertState => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        message: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { weatherReducer } from './reducers/weatherReducer'\r\nimport { alertReducer } from './reducers/alertReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n  alert: alertReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport '../node_modules/bulma/css/bulma.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}